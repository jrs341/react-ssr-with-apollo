{"version":3,"file":"bundle.js","sources":["webpack:///webpack/bootstrap df0c995210edca67a234","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///src/components/Spinner/index.js","webpack:///external \"prop-types\"","webpack:///external \"react-router\"","webpack:///external \"apollo-link\"","webpack:///external \"apollo-link-http\"","webpack:///external \"apollo-link-persisted-queries\"","webpack:///src/routes/Main.js","webpack:///src/server.js","webpack:///external \"express\"","webpack:///external \"path\"","webpack:///external \"http-proxy-middleware\"","webpack:///external \"react-dom/server\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"node-fetch\"","webpack:///src/links.js","webpack:///external \"apollo-link-ws\"","webpack:///external \"apollo-link-error\"","webpack:///external \"apollo-utilities\"","webpack:///src/routes/Html.js","webpack:///src/routes/Layout.js","webpack:///src/routes/index.js","webpack:///src/components/AllCustomers/AllCustomers.js","webpack:///src/components/Spinner/Spinner.js","webpack:///./src/graphql/AllCustomers.graphql","webpack:///src/components/Availability/Availability.js","webpack:///src/Components/Spinner/index.js","webpack:///src/Components/Spinner/Spinner.js","webpack:///./src/graphql/Availability.graphql","webpack:///src/components/CurrentCustomers/CurrentCustomers.js","webpack:///./src/graphql/CurrentCustomers.graphql","webpack:///src/components/CustomerInfoForm/CustomerInfoForm.js","webpack:///src/components/CustomerInfoForm/AdditionalOccupantsField.js","webpack:///src/components/CustomerInfoForm/CustomerInfoField.js","webpack:///src/components/CustomerInfoForm/DateRangeField.js","webpack:///src/components/CustomerInfoForm/RateField.js","webpack:///src/components/CustomerInfoForm/RentalTypeField.js","webpack:///src/components/CustomerInfoForm/RVInfoField.js","webpack:///src/components/CustomerInfoForm/PetInfoField.js","webpack:///src/components/Search/Search.js","webpack:///./src/graphql/AllMeters.graphql","webpack:///./src/graphql/SearchCustomers.graphql","webpack:///./src/graphql/GetCustomer.graphql","webpack:///src/components/CustomerInfoForm/VehicleInfoField.js","webpack:///src/components/TivoliRiverLevel/TivoliRiverLevel.js","webpack:///src/components/LineChart/LineChart.js","webpack:///src/components/LineChart/DataBox.js","webpack:///src/components/LineChart/TrendInfo.js","webpack:///src/components/LineChart/MajorAxis.js","webpack:///src/components/LineChart/MinorAxis.js","webpack:///./src/graphql/TivoliRiverInfo.graphql","webpack:///src/routes/NotFoundPage.js","webpack:///src/routes/Status.js","webpack:///external \"react-router-dom\"","webpack:///src/components/CheckAvailability/CheckAvailability.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap df0c995210edca67a234","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = 1\n// module chunks = 0","export { Spinner } from './Spinner'\n\n\n// WEBPACK FOOTER //\n// src/components/Spinner/index.js","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"react-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"apollo-link\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"apollo-link-http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-http\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"apollo-link-persisted-queries\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-persisted-queries\"\n// module id = 7\n// module chunks = 0","import React from 'react'\nimport { withApollo } from 'react-apollo'\n\nimport AllCustomers from '../components/AllCustomers/AllCustomers'\nimport Availability from '../components/Availability/Availability'\nimport CheckAvailability from '../components/CheckAvailability/CheckAvailability'\nimport CurrentCustomers from '../components/CurrentCustomers/CurrentCustomers'\nimport CustomerInfoForm from '../components/CustomerInfoForm/CustomerInfoForm'\nimport TivoliRiverLevel from '../components/TivoliRiverLevel/TivoliRiverLevel'\n\nclass Main extends React.Component{\n\trender(props) {\n\t\treturn(\n\t\t\t<div>\n\t\t\t<h1> Calhoun's Demo Dashboard </h1>\n\t\t\t{/*<TivoliRiverLevel />*/}\n\t\t\t<CheckAvailability />\n\t\t\t<Availability />\n\t\t\t<CustomerInfoForm />\n\t    <CurrentCustomers />\n\t\t\t{/*<AllCustomers />*/}\n\t    </div>\n\t\t)\n\t}\n}\n\nexport default withApollo(Main)\n\n\n// WEBPACK FOOTER //\n// src/routes/Main.js","import Express from 'express';\nimport path from 'path';\nimport proxy from 'http-proxy-middleware';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/server';\nimport { StaticRouter } from 'react-router';\n\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider, renderToStringWithData, withApollo } from 'react-apollo';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'node-fetch';\nimport { createPersistedQueryLink } from 'apollo-link-persisted-queries';\n\nimport {\n  errorLink,\n  subscriptionLink,\n  requestLink,\n  queryOrMutationLink,\n} from './links';\nimport Html from './routes/Html';\nimport Layout from './routes/Layout';\n\nlet PORT = 3000;\nif (process.env.PORT) {\n  PORT = parseInt(process.env.PORT, 10);\n}\n\nconst API_HOST =\n  process.env.NODE_ENV !== 'production'\n    ? 'http://localhost:3010'\n    // ? 'https://graphql-server-basic.herokuapp.com/'\n    : ''\n\nconst app = new Express();\n\nconst apiProxy = proxy({ target: API_HOST, changeOrigin: true });\napp.use('/graphql', apiProxy);\napp.use('/graphiql', apiProxy);\napp.use('/login', apiProxy);\napp.use('/logout', apiProxy);\n\nif (process.env.NODE_ENV === 'production') {\n  // In production we want to serve our JS from a file on the filesystem.\n  app.use('/static', Express.static(path.join(process.cwd(), 'build/client')));\n} else {\n  // Otherwise we want to proxy the webpack development server.\n  app.use(\n    '/static',\n    proxy({ target: 'http://localhost:3020', pathRewrite: { '^/static': '' } })\n  );\n  // app.use('/favicon.ico', Express.static(__dirname + './favicon.ico'))\n  // console.log('**** static express ****', Express.static(__dirname + './favicon.ico'))\n}\nconst links = [\n  errorLink,\n  queryOrMutationLink({\n    fetch,\n    uri: `${API_HOST}/graphql`,\n  }),\n];\n// support APQ in production\nif (process.env.NODE_ENV === 'production') {\n  links.unshift(createPersistedQueryLink());\n}\napp.use((req, res) => {\n  const client = new ApolloClient({\n    ssrMode: true,\n    link: ApolloLink.from(links),\n    cache: new InMemoryCache(),\n  });\n\n  const context = {};\n\n  // const AppWithClient = withApollo(Layout);\n\n  const component = (\n    <ApolloProvider client={client}>\n      <StaticRouter location={req.url} context={context}>\n        <Layout />\n      </StaticRouter>\n    </ApolloProvider>\n  );\n\n  renderToStringWithData(component)\n    .then(content => {\n      res.status(200);\n      const html = <Html content={content} client={client} />;\n      res.send(`<!doctype html>\\n${ReactDOM.renderToStaticMarkup(html)}`);\n      res.end();\n    })\n    .catch(e => {\n      console.error('RENDERING ERROR:', e); // eslint-disable-line no-console\n      res.status(500);\n      res.end(\n        `An error occurred. Please submit an issue to [https://github.com/apollographql/GitHunt-React] with the following stack trace:\\n\\n${\n          e.stack\n        }`\n      );\n    });\n});\n\napp.listen(PORT, () =>\n  console.log(\n    // eslint-disable-line no-console\n    `App Server is now running on http://localhost:${PORT}`\n  )\n);\n\n\n\n// WEBPACK FOOTER //\n// src/server.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"http-proxy-middleware\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http-proxy-middleware\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"react-dom/server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom/server\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"apollo-client\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-client\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"apollo-cache-inmemory\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-cache-inmemory\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"node-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"node-fetch\"\n// module id = 16\n// module chunks = 0","import { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { onError } from 'apollo-link-error';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { createPersistedQueryLink } from 'apollo-link-persisted-queries';\n\nexport const errorLink = onError(({ graphQLErrors, networkError }) => {\n  /*\n  onError receives a callback in the event a GraphQL or network error occurs.\n  This example is a bit contrived, but in the real world, you could connect\n  a logging service to the errorLink or perform a specific action in response\n  to an error.\n  */\n  if (graphQLErrors)\n    graphQLErrors.map(({ message, location, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${location}, Path: ${path}`\n      )\n    );\n  if (networkError) console.log(`[Network error]: ${networkError}`);\n});\n\nexport const subscriptionLink = (config = {}) =>\n  new WebSocketLink({\n    uri:\n      process.env.NODE_ENV !== 'production'\n        ? 'ws://localhost:3010/subscriptions'\n        : 'wss://api.githunt.com/subscriptions',\n    options: { reconnect: true },\n    ...config,\n  });\n\nexport const queryOrMutationLink = (config = {}) =>\n  // turn on CDN support via GET\n  createPersistedQueryLink({ useGETForHashedQueries: true }).concat(\n    new HttpLink({\n      ...config,\n      credentials: 'same-origin',\n    })\n  );\n\nexport const requestLink = ({ queryOrMutationLink, subscriptionLink }) =>\n  /*\n    This link checks if the operation is a subscription.\n    If it is, we use our subscription link to retrieve data over WebSockets.\n    If it is a query or mutation, we retrieve data over HTTP.\n  */\n  ApolloLink.split(\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    subscriptionLink,\n    queryOrMutationLink\n  );\n\n\n\n// WEBPACK FOOTER //\n// src/links.js","module.exports = require(\"apollo-link-ws\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-ws\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"apollo-link-error\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-error\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"apollo-utilities\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-utilities\"\n// module id = 20\n// module chunks = 0","/* eslint-disable react/no-danger */\n\nimport React from 'react';\n\nconst Html = ({ content, client: { cache } }) => (\n  <html lang=\"en\">\n    <head>\n      <meta charSet=\"utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\"\n        integrity=\"sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7\"\n        crossOrigin=\"anonymous\"\n      />\n      <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"/>\n      <link href='https://fonts.googleapis.com/css?family=Akronim' rel='stylesheet'/>\n      <link href='https://fonts.googleapis.com/css?family=Amita' rel='stylesheet'/>\n      <link href='https://fonts.googleapis.com/css?family=Averia Gruesa Libre' rel='stylesheet'/>\n      <link href='https://fonts.googleapis.com/css?family=Alex Brush' rel='stylesheet'/>\n      <link rel=\"icon\"  href=\"/static/favicon.ico\"/>\n      <title>Calhoun's Riverside RV Retreat</title>\n    </head>\n    <body>\n      {/*<img src='/static/favicon.svg' height='16' width='16'/>\n      <svg width='16px' height='16px' xmlns='http://www.w3.org/2000/svg' style={{backgroundColor: 'transparent'}} >\n          <text key='logoC' x='0' y='15.5' style={{fill: 'blue', fontSize: '21'}}> C </text>\n          <text key='logoRV' x='3.5' y='10.5' style={{fill: 'red', fontSize: '6.8'}}> RV </text>\n      </svg>*/}\n      <div id=\"content\" dangerouslySetInnerHTML={{ __html: content }} />\n      \n      <div id=\"footer\">\n      </div>\n      <script\n        charSet=\"UTF-8\"\n        dangerouslySetInnerHTML={{\n          __html: `window.__APOLLO_STATE__=${JSON.stringify(cache.extract())};`,\n        }}\n      />\n      <script src=\"/static/bundle.js\" charSet=\"UTF-8\" />\n    </body>\n  </html>\n);\n\nexport default Html;\n\n\n\n// WEBPACK FOOTER //\n// src/routes/Html.js","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { withApollo } from 'react-apollo';\nimport routes from './index';\nimport Main from './Main'\n// import Navbar from '../components/Navbar';\n\n// const ReactGA = process.browser ? require('react-ga') : {};\n\n// if (process.browser) {\n//   // Initialize Analytics\n//   ReactGA.initialize('UA-74643563-4');\n// }\n\n// function logPageView() {\n//   if (process.browser) {\n//     ReactGA.set({ page: window.location.pathname });\n//     ReactGA.pageview(window.location.pathname);\n//   }\n\n//   return null;\n// }\n\nclass Layout extends React.Component{\n\trender (props) {\n\t\treturn(\n\t\t\t <div>\n     {/*<Navbar />*/}\n     <div className=\"container\">\n      <Switch>\n        <Route path='/' render={ (props) =>\n          <Main client={this.props.client} {...props}/>}/>\n      </Switch>\n     </div>\n   </div>)\n\t}\n}\n\nexport default withApollo(Layout)\n\n\n\n// WEBPACK FOOTER //\n// src/routes/Layout.js","import Main from './Main';\n// import NewEntryPage from './NewEntryPage';\n// import CommentsPage from './CommentsPage';\nimport NotFoundPage from './NotFoundPage';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    exact: true,\n    component: Main,\n  },\n  // {\n  //   path: '/feed/:type',\n  //   name: 'feed',\n  //   component: FeedPage,\n  // },\n  // {\n  //   path: '/submit',\n  //   name: 'submit',\n  //   component: NewEntryPage,\n  // },\n  // {\n  //   path: '/:org/:repoName',\n  //   name: 'submit',\n  //   component: CommentsPage,\n  // },\n  {\n    path: '*',\n    name: 'notfound',\n    component: NotFoundPage,\n  },\n];\n\nexport default routes;\n\n\n\n// WEBPACK FOOTER //\n// src/routes/index.js","import React from 'react'\nimport { Query } from 'react-apollo'\n\nimport Spinner from '../../components/Spinner'\nimport ALL_CUSTOMERS from '../../graphql/AllCustomers.graphql'\n\nexport default class AllCustomers extends React.Component{\n\trender() {\n\t\treturn(\n\t\t\t<Query query={ALL_CUSTOMERS}>\n\t    \t{ ({loading, data}) => {\n\t    \t\tif (loading) {\n\t    \t\t\treturn (<h1> <Spinner /> </h1>)\n\t    \t\t} else {\n            return ( \n              <div>\n                <h1> All Customers </h1>\n                {data.allCustomers.map(customer => {\n                  return (<p key={customer.email}> {customer.given_name + ' ' + customer.family_name + ' : ' + customer.email} </p>)\n                })}\n              </div>\n            )\n          }\n        } \n      }\n    \t</Query>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/AllCustomers/AllCustomers.js","import React, {Component} from 'react'\n\nclass Spinner extends Component {\n  render () {\n    return (\n      <div className='ura-spinner-container'>\n        <div className='ura-spinner'>\n          <div className='ura-rect1'></div>\n          <div className='ura-rect2'></div>\n          <div className='ura-rect3'></div>\n          <div className='ura-rect4'></div>\n          <div className='ura-rect5'></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport { Spinner }\n\n\n// WEBPACK FOOTER //\n// src/components/Spinner/Spinner.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"allCustomers\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"allCustomers\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"given_name\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"family_name\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}]}}],\"loc\":{\"start\":0,\"end\":73}};\n    doc.loc.source = {\"body\":\"query allCustomers {\\n\\tallCustomers {\\n\\tgiven_name\\n\\tfamily_name\\n\\temail\\n\\t}\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"allCustomers\"] = oneQuery(doc, \"allCustomers\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/AllCustomers.graphql\n// module id = 26\n// module chunks = 0","import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\n\nimport { Spinner } from '../../Components/Spinner'\nimport AVAILABILITY from '../../graphql/Availability.graphql'\n\nexport default class Availability extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<Query query={AVAILABILITY}>\n\t\t\t\t{ ({loading, data}) => {\n\t\t\t\t\tif(loading) {\n\t\t\t\t\t\treturn (<h1> <Spinner /> </h1>)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1> Availability </h1>\n\t\t\t\t\t\t\t<h3> Cabins </h3>\n\t\t\t\t\t\t\t{data.cabinAvailability.map(meter => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t[<label> {meter.meter} </label>,\n\t\t\t\t\t\t\t\t\t<input type='checkbox'\n\t\t\t\t\t\t\t\t\t/>]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<h3> RV Spaces </h3>\n\t\t\t\t\t\t\t{data.rvAvailability.map(meter => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t[<label> {meter.meter} </label>,\n\t\t\t\t\t\t\t\t\t<input type='checkbox'\n\t\t\t\t\t\t\t\t\t/>]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t</Query>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/Availability/Availability.js","export { Spinner } from './Spinner'\n\n\n// WEBPACK FOOTER //\n// src/Components/Spinner/index.js","import React, {Component} from 'react'\n\nclass Spinner extends Component {\n  render () {\n    return (\n      <div className='ura-spinner-container'>\n        <div className='ura-spinner'>\n          <div className='ura-rect1'></div>\n          <div className='ura-rect2'></div>\n          <div className='ura-rect3'></div>\n          <div className='ura-rect4'></div>\n          <div className='ura-rect5'></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport { Spinner }\n\n\n// WEBPACK FOOTER //\n// src/Components/Spinner/Spinner.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"availability\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"cabinAvailability\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"_id\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"meter\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"rvAvailability\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"_id\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"meter\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}]}}],\"loc\":{\"start\":0,\"end\":91}};\n    doc.loc.source = {\"body\":\"query availability {\\n\\tcabinAvailability {\\n\\t_id\\n\\tmeter\\n\\t}\\n\\trvAvailability {\\n\\t_id\\n\\tmeter\\n\\t}\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"availability\"] = oneQuery(doc, \"availability\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/Availability.graphql\n// module id = 30\n// module chunks = 0","import React from 'react'\nimport { Query } from 'react-apollo'\n\nimport Spinner from '../../components/Spinner'\nimport CURRENT_CUSTOMERS from '../../graphql/CurrentCustomers.graphql'\n\nexport default class CurrentCustomers extends React.Component{\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tcustomer: ''\n\t\t}\n\n\t\tthis.dropDown = this.dropDown.bind(this)\n\t\tthis.onChange = this.onChange.bind(this)\n\t}\n\n\tdropDown(event) {\n\t\tif(this.state.customer == event.target.id){\n\t\t\tthis.setState({customer: ''})\n\t\t} else {\n\t\t\tthis.setState({customer: event.target.id})\t\n\t\t}\n\t}\n\n\tonChange(event) {\n\t\t// client.query(SEARCH_CUSTOMERS).then(res => {\n\t\t// \tconsole.log('query res', res)})\n\t\t// .catch(err => {\n\t\t// \tconsole.log('query err', err)\n\t\t// })\n\t\tconsole.log('props', this.props)\n\t\tthis.setState({query:event.target.value})\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Query query={CURRENT_CUSTOMERS}>\n\t    \t{ ({loading, data}) => {\n\t    \t\tif (loading) {\n\t    \t\t\treturn (<h1> <Spinner /> </h1>)\n\t    \t\t} else {\n\t    \t\t\treturn (\n\t    \t\t\t\t<div>\n\t    \t\t\t\t\t<h1>Current Customers</h1>\n\t    \t\t\t\t\t<table>\n\t    \t\t\t\t\t<tbody>\n\t    \t\t\t\t\t\t<tr>\n\t    \t\t\t\t\t\t\t<td> Location </td>\n\t    \t\t\t\t\t\t\t<td> First Name </td>\n\t    \t\t\t\t\t\t\t<td> Last Name </td>\n\t    \t\t\t\t\t\t\t<td> Phone Number </td>\n\t    \t\t\t\t\t\t\t<td> Customer Id </td>\n\t    \t\t\t\t\t\t\t<td> Email </td>\n\t    \t\t\t\t\t\t\t<td> Current Invoice </td>\n\t    \t\t\t\t\t\t\t<td></td>\n\t    \t\t\t\t\t\t</tr>\n\t    \t\t\t\t\t\t{data.currentCustomers.map((obj, i) => {\n\t    \t\t\t\t\t\t\treturn (\n\t    \t\t\t\t\t\t\t\t<tr>\n\t    \t\t\t\t\t\t\t\t\t<td>{obj.meter}</td>\n\t    \t\t\t\t\t\t\t\t\t<td>{obj.given_name}</td>\n\t    \t\t\t\t\t\t\t\t\t<td>{obj.family_name}</td>\n\t    \t\t\t\t\t\t\t\t\t<td>{obj.phone_number}</td>\n\t    \t\t\t\t\t\t\t\t\t<td>{obj._id}</td>\n\t    \t\t\t\t\t\t\t\t\t<td>{obj.email}</td>\n\t    \t\t\t\t\t\t\t\t\t<td> 0000023 </td>\n\t    \t\t\t\t\t\t\t\t\t<td>\n\t    \t\t\t\t\t\t\t\t\t\t<i className='material-icons'\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{fontSize:'12px', color:'blue'}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={obj._id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.dropDown}>{this.state.customer == obj._id ? 'cancel' : 'more_vert'}</i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<menu style={this.state.customer == obj._id ? {} : {display:'none'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li data-id={obj._id} onClick={this.onSelect}> CheckOut </li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li data-id={obj._id} onClick={this.onSelect}> Transfer </li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</menu>\n\t    \t\t\t\t\t\t\t\t\t</td>\n\t    \t\t\t\t\t\t\t\t</tr>\n\t    \t\t\t\t\t\t\t)\n\t    \t\t\t\t\t\t})}\n\t    \t\t\t\t\t</tbody>\n\t    \t\t\t\t\t</table>\n\t    \t\t\t\t</div>\n\t    \t\t\t)\n\t    \t\t}\n\t    \t}}\n\t    </Query> \t\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/CurrentCustomers/CurrentCustomers.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"currentCustomers\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"currentCustomers\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"_id\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"given_name\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"family_name\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"meter\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"phone_number\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}]}}],\"loc\":{\"start\":0,\"end\":107}};\n    doc.loc.source = {\"body\":\"query currentCustomers {\\n\\tcurrentCustomers {\\n\\t_id\\n\\tgiven_name\\n\\tfamily_name\\n\\temail\\n\\tmeter\\n\\tphone_number\\n\\t}\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"currentCustomers\"] = oneQuery(doc, \"currentCustomers\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/CurrentCustomers.graphql\n// module id = 32\n// module chunks = 0","import React, { Component } from 'react'\nimport { withApollo } from 'react-apollo'\n\nimport AdditionalOccupantsField from './AdditionalOccupantsField'\nimport CustomerInfoField from './CustomerInfoField'\nimport DateRangeField from './DateRangeField'\nimport RateField from './RateField'\nimport RentalTypeField from './RentalTypeField'\nimport RVInfoField from './RVInfoField'\nimport PetInfoField from './PetInfoField'\nimport Search from '../Search/Search'\nimport VehicleInfoField from './VehicleInfoField'\n\nclass CustomerInfoForm extends Component{\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tcabin: false,\n\t\t\tcustomer: {},\n\t\t\tupdatedInfo: {\n\t\t\t\t_id:''\n\t\t\t}\n\t\t}\n\n\t\tthis.resetForm = this.resetForm.bind(this)\n\t\tthis.setCustomer = this.setCustomer.bind(this)\n\t}\n\n\tresetForm(event) {\n\t\tthis.setState({customer:{}})\n\t\tthis.setState({updatedInfo:{_id:''}})\n\t}\n\n\tsetCustomer(customer) {\n\t\tthis.setState({customer:customer})\n\t\tthis.setState({updatedInfo:{_id:customer._id}})\n\t}\n\n\trender(props) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Search\n\t\t\t\tsetCustomer={this.setCustomer}\n\t\t\t\tresetForm={this.resetForm}/>\n\t\t\t<form name = 'checkin'>\n\t\t\t\t<RentalTypeField />\n\t\t\t\t<RateField />\n\t\t\t\t<DateRangeField />\n\t\t\t\t<CustomerInfoField />\n\t\t\t\t<AdditionalOccupantsField />\n\t\t\t\t<PetInfoField />\n\t\t\t\t<RVInfoField />\n\t\t\t\t<VehicleInfoField />\n\t\t\t\t\n\t\t\t\t<input\n\t\t\t\ttype='submit'\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\ttype='reset'\n\t\t\t\tonClick={this.resetForm}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\ttype='submit'\n\t\t\t\tvalue='Call List'\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default withApollo(CustomerInfoForm)\n\n\n// WEBPACK FOOTER //\n// src/components/CustomerInfoForm/CustomerInfoForm.js","import React, { Component } from 'react'\n\nexport default class AdditionalOccupantsField extends Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tcustomer: {}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<fieldset form='checkin' name='additionalOccupantInfo'>\n\t\t\t<legend> Additional Occupants </legend>\n\t\t\t\t<label>Additional Occupant</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '14'\n\t\t\t\tname='additional_occupant_1'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.additional_occupant_1}\n\t\t\t\t/>\n\t\t\t\t<label>Additional Occupant Age</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '15'\n\t\t\t\tname='additional_occupant_1_age'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.additional_occupant_1_age}\n\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/CustomerInfoForm/AdditionalOccupantsField.js","import React, { Component } from 'react'\n\nexport default class CustomerInfoField extends Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tcustomer: {}\n\t\t}\n\tthis.updateCustomer = this.updateCustomer.bind(this)\n\t}\n\t\n\tupdateCustomer(event) {\n\t\tif(Object.keys(this.state.customer).length === 0){\n\t\t\tconst customer = {}\n\t\t\tconst input = document.getElementById(event.target.name)\n\t\t\tthis.setState({customer: customer})\n\t\t\t}\n\t\tthis.setState({customer: { ...this.state.customer, [event.target.name] : event.target.value}})\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<fieldset form='checkin' name='customerInfo'>\n\t\t\t\t<legend> Customer Info </legend>\n\t\t\t\t<label>First Name</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '2'\n\t\t\t\tname = 'given_name'\n\t\t\t\ttype = 'text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue = {this.state.customer.given_name}\n\t\t\t\t/>\n\t\t\t\t<label>Last Name</label>\n\t\t\t\t<input\n\t\t\t\tid = 'family_name'\n\t\t\t\ttabIndex = '3'\n\t\t\t\tname='family_name'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.family_name}\n\t\t\t\t/>\n\t\t\t\t<label>Email</label>\n\t\t\t\t<input\n\t\t\t\tid = 'email'\n\t\t\t\ttabIndex = '4'\n\t\t\t\tname='email'\n\t\t\t\ttype='email'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.email}\n\t\t\t\t/>\n\t\t\t\t<label>Phone</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '5'\n\t\t\t\tname='phone_number'\n\t\t\t\ttype='tel'\n\t\t\t\tvalue={this.state.customer.phone_number}\n\t\t\t\t/>\n\t\t\t\t<label>Alt Phone</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '6'\n\t\t\t\tname='phone_number_alt'\n\t\t\t\ttype='tel'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.phone_number_alt}\n\t\t\t\t/>\n\t\t\t\t<label>Address</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '7'\n\t\t\t\tname='address_line_1'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.address_line_1}\n\t\t\t\t/>\n\t\t\t\t<label>City</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '8'\n\t\t\t\tname='locality'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.locality}\n\t\t\t\t/>\n\t\t\t\t<label>State</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '9'\n\t\t\t\tname='administrative_district_level_1'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.administrative_district_level_1}\n\t\t\t\t/>\n\t\t\t\t<label>Postal Code</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '10'\n\t\t\t\tname='postal_code'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.postal_code}\n\t\t\t\t/>\n\t\t\t\t<label>Country</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '11'\n\t\t\t\tname='country'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.country}\n\t\t\t\t/>\n\t\t\t\t<label>Drivers License Num</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '12'\n\t\t\t\tname='drivers_license_num'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.drivers_license_num}\n\t\t\t\t/>\n\t\t\t\t<label>Drivers License State</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '13'\n\t\t\t\tname='drivers_license_state'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.drivers_license_state}\n\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/CustomerInfoForm/CustomerInfoField.js","import React, { Component } from 'react'\n\nexport default class DateRangeField extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<fieldset form='checkin' name='dateRange'>\n\t\t\t<legend> Date Range </legend>\n\t\t\t\t<label>Checkin</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '4'\n\t\t\t\ttype='date'\n\t\t\t\t/>\n\t\t\t\t<label>Checkout</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '4'\n\t\t\t\ttype='date'\n\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/CustomerInfoForm/DateRangeField.js","import React, { Component } from 'react'\n\nexport default class RateField extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<fieldset form='checkin' name='rateSet'>\n\t\t\t<legend> Rental Rate </legend>\n\t\t\t\t<label>Daily</label>\n\t\t\t\t\t<input\n\t\t\t\t\ttabIndex = '2'\n\t\t\t\t\tname = 'daily'\n\t\t\t\t\ttype = 'checkbox'\n\t\t\t\t\t/>\n\t\t\t\t\t<label>Weekly</label>\n\t\t\t\t\t<input\n\t\t\t\t\ttabIndex = '3'\n\t\t\t\t\tname = 'weekly'\n\t\t\t\t\ttype = 'checkbox'\n\t\t\t\t\t/>\n\t\t\t\t\t<label>Monthly</label>\n\t\t\t\t\t<input\n\t\t\t\t\ttabIndex = '4'\n\t\t\t\t\tname = 'monthly'\n\t\t\t\t\ttype = 'checkbox'\n\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/CustomerInfoForm/RateField.js","import React, { Component } from 'react'\n\nexport default class RentalTypeField extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<fieldset form='checkin' name='rateSet'>\n\t\t\t<legend> Rental Type </legend>\n\t\t\t\t<label>RV Space</label>\n\t\t\t\t\t<input\n\t\t\t\t\ttabIndex = '2'\n\t\t\t\t\tname = 'rvSpace'\n\t\t\t\t\ttype = 'checkbox'\n\t\t\t\t\t/>\n\t\t\t\t\t<label>Cabin</label>\n\t\t\t\t\t<input\n\t\t\t\t\ttabIndex = '3'\n\t\t\t\t\tname = 'cabin'\n\t\t\t\t\ttype = 'checkbox'\n\t\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/CustomerInfoForm/RentalTypeField.js","import React, { Component } from 'react'\n\nexport default class RVInfoField extends Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tcustomer: {}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<fieldset form='checkin' name='RVInfo'>\n\t\t\t\t<legend> RV Info </legend>\n\t\t\t\t<label>RV Type</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '19'\n\t\t\t\tname='unit_type'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.unit_type}\n\t\t\t\t/>\n\t\t\t\t<label>RV Length</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '20'\n\t\t\t\tname='unit_length'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.unit_length}\n\t\t\t\t/>\n\t\t\t\t<label>RV Year</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '21'\n\t\t\t\tname='unit_year'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.unit_type}\n\t\t\t\t/>\n\t\t\t\t<label>RV License Plate Num</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '22'\n\t\t\t\tname='unit_license'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.unit_license}\n\t\t\t\t/>\n\t\t\t\t<label>RV License Plate State</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '23'\n\t\t\t\tname='unit_state'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.unit_state}\n\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/CustomerInfoForm/RVInfoField.js","import React, { Component } from 'react'\n\nexport default class PetInfoField extends Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tcustomer: {}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<fieldset form='checkin' name='petInfo'>\n\t\t\t<legend> Pet Info </legend>\n\t\t\t\t<label>Number of Pets</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '16'\n\t\t\t\tname='pets_number_of'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.pets_number_of}\n\t\t\t\t/>\n\t\t\t\t<label>Type of Pets</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '17'\n\t\t\t\tname='pets_type'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.pets_type}\n\t\t\t\t/>\n\t\t\t\t<label>Breed of Dog</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '18'\n\t\t\t\tname='pets_breed'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.pets_breed}\n\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/CustomerInfoForm/PetInfoField.js","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { withApollo } from 'react-apollo'\nimport { Spinner } from '../Spinner'\n\nimport ALL_METERS from '../../graphql/AllMeters.graphql'\nimport SEARCH_CUSTOMERS from '../../graphql/SearchCustomers.graphql'\nimport GET_CUSTOMER from '../../graphql/GetCustomer.graphql'\n\nclass Search extends React.Component {\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tquery: '',\n\t\t\tcustomer: {}\n\t\t}\n\n\t\t// this.dropDown = this.dropDown.bind(this)\n\t\tthis.onChange = this.onChange.bind(this)\n\t\tthis.onSelect = this.onSelect.bind(this)\n\t}\n\n\t// dropDown(event) {\n\t// \tif(this.state.customer == event.target.id){\n\t// \t\tthis.setState({customer: ''})\n\t// \t} else {\n\t// \t\tthis.setState({customer: event.target.id})\t\n\t// \t}\n\t// }\n\n\tonChange(event) {\n\t\tthis.setState({query:event.target.value})\n\t}\n\n\tonSelect(event) {\n\t\tconst {client} = this.props\n\t\tclient.query({\n\t\t\tquery: GET_CUSTOMER,\n\t\t\tvariables:{\n\t\t\t\tid: event.target.attributes.getNamedItem('data-id').value\n\t\t\t}\n\t\t}).then(res => {\n\t\t\tthis.props.setCustomer(res.data.getCustomer)\n\t\t}).catch(err => {\n\t\t\tconsole.log('query error', err)\n\t\t})\n\t\tthis.setState({query:''})\n\t}\n\n\trender (props) {\n\t\treturn(\n\t\t\t<div>\n\t\t\t<input\n\t\t\t\ttabIndex = '1'\n\t\t\t\tplaceholder='Search ...'\n\t\t\t\ttype='text'\n\t\t\t\tonChange={this.onChange}\n\t\t\t\tonClick={this.props.resetForm}\n\t\t\t\tvalue={this.state.query}\n\t\t\t\tstyle={{display:'block'}}\n\t\t\t/>\n\t\t\t{ this.state.query != ''\n\t\t\t\t? <ul>\n\t\t\t\t\t{ this.state.query != ''\n\t\t\t\t\t\t? <Query query={SEARCH_CUSTOMERS}\n\t\t\t\t\t\t\tssr={false}\n\t\t\t\t\t\t\tvariables={{query: this.state.query}}>\n\t\t\t\t\t\t\t{({loading, data}) => {\n\t\t\t\t\t\t\t\t\tif (loading) {\n\t\t\t\t\t\t\t\t\t\treturn (<li> <Spinner /> </li>)\n\t\t\t\t\t\t\t\t\t} else if (data == undefined || data.searchCustomer.length === 0) {\n\t\t\t\t\t\t\t\t\t\treturn (<li> Add Customer </li>)\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconst options = data.searchCustomer.map((customer, i) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (<li tabIndex={i + 2}\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i + 2}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-id={customer._id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.onSelect}> {customer.given_name}\n\t\t\t\t\t\t\t\t\t\t\t\t{/*<i className='material-icons'\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{fontSize:'12px', color:'blue'}}\n\t\t\t\t\t\t\t\t\t\t\t\tid={customer._id}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.dropDown}>{this.state.customer == customer._id ? 'cancel' : 'more_vert'}</i>\n\t\t\t\t\t\t\t\t\t\t\t\t<menu style={this.state.customer == customer._id ? {} : {display:'none'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li key='checkin' data-id={customer._id} onClick={this.onSelect}> Checkin </li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li data-id={customer._id} onClick={this.onSelect}> CheckOut </li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li data-id={customer._id} onClick={this.onSelect}> Transfer </li>\n\t\t\t\t\t\t\t\t\t\t\t\t</menu>*/}\n\t\t\t\t\t\t\t\t\t\t\t\t</li>)\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\treturn options\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  </Query>\n\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t  </ul>\n\t\t\t\t: null\n\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\t\n\nexport default withApollo(Search)\n\t\t\n\n\n// WEBPACK FOOTER //\n// src/components/Search/Search.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"allMeters\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"allMeters\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"_id\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"meter\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}]}}],\"loc\":{\"start\":0,\"end\":47}};\n    doc.loc.source = {\"body\":\"query allMeters {\\n\\tallMeters {\\n\\t_id\\n\\tmeter\\n\\t}\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"allMeters\"] = oneQuery(doc, \"allMeters\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/AllMeters.graphql\n// module id = 42\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"searchCustomers\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"defaultValue\":null}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"searchCustomer\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"_id\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"given_name\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"family_name\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}]}}],\"loc\":{\"start\":0,\"end\":114}};\n    doc.loc.source = {\"body\":\"query searchCustomers($query: String) {\\n\\tsearchCustomer(query: $query) {\\n\\t_id\\n\\tgiven_name\\n\\tfamily_name\\n\\temail\\n\\t}\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"searchCustomers\"] = oneQuery(doc, \"searchCustomers\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/SearchCustomers.graphql\n// module id = 43\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getCustomer\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"defaultValue\":null}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"getCustomer\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"_id\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"given_name\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"family_name\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"phone_number\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"address_line_1\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"locality\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"administrative_district_level_1\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"postal_code\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"country\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"drivers_license_num\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"drivers_license_state\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}]}}],\"loc\":{\"start\":0,\"end\":237}};\n    doc.loc.source = {\"body\":\"query getCustomer($id: String) {\\n\\tgetCustomer(id: $id) {\\n\\t_id\\n\\tgiven_name\\n\\tfamily_name\\n\\temail\\n\\tphone_number\\n\\taddress_line_1\\n\\tlocality\\n\\tadministrative_district_level_1\\n\\tpostal_code\\n\\tcountry\\n\\tdrivers_license_num\\n\\tdrivers_license_state\\n\\t}\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"getCustomer\"] = oneQuery(doc, \"getCustomer\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/GetCustomer.graphql\n// module id = 44\n// module chunks = 0","import React, { Component } from 'react'\n\nexport default class VehicleInfoField extends Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tcustomer: {}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<fieldset form='checkin' name='vehicleInfo'>\n\t\t\t<legend> Vehicle Info </legend>\n\t\t\t\t<label>Vehicle Type</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '24'\n\t\t\t\tname='vehicle_1_type'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.vehicle_1_type}\n\t\t\t\t/>\n\t\t\t\t<label>Vehicle License Num</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '25'\n\t\t\t\tname='vehicle_1_license'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.vehicle_1_license}\n\t\t\t\t/>\n\t\t\t\t<label>Vehicle License State</label>\n\t\t\t\t<input\n\t\t\t\ttabIndex = '25'\n\t\t\t\tname='vehicle_1_state'\n\t\t\t\ttype='text'\n\t\t\t\tonChange = {this.updateCustomer}\n\t\t\t\tvalue={this.state.customer.vehicle_1_state}\n\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/CustomerInfoForm/VehicleInfoField.js","import React from 'react'\nimport { Query } from 'react-apollo'\nimport LineChart from '../LineChart/LineChart'\nimport { Spinner } from '../Spinner'\n\nimport TIVOLI_RIVER_INFO from '../../graphql/TivoliRiverInfo.graphql'\n\nexport default class TivoliRiverLevel extends React.Component{\n\trender() {\n\t\treturn(\n\t\t\t<Query query={TIVOLI_RIVER_INFO}\n\t\t\t\tssr={true}>\n\t\t\t\t{({loading, data}) => {\n\t\t\t\t\tif (loading) {\n\t\t\t\t\t\treturn (<Spinner />)\n\t\t\t\t\t} else if (data == undefined || data.getTivoliRiverInfo.length === 0) {\n\t\t\t\t\t\treturn (<h3> No Data </h3>)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<LineChart data={data.getTivoliRiverInfo}>\n\t\t\t\t\t\t\t</LineChart>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\t\n\t\t\t</Query>\n\t\t)\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/TivoliRiverLevel/TivoliRiverLevel.js","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport DataBox from './DataBox'\nimport MajorAxis from './MajorAxis'\nimport MinorAxis from './MinorAxis'\n\nexport default class LineChart extends Component{\n\tstatic propTypes = {\n\n\t}\n\n\tstatic defaultProps = {\n\t\tcolor: '#2196F3',\n\t\tsvgHeight: 40,\n\t\tsvgWidth: 80\n\t}\n\n\trender () {\n\t\tconst { data:{data}, data:{trendInfo}, svgWidth, svgHeight } = this.props\n\t\treturn(\n\t\t\t<svg viewBox={`-1 -1 ${svgWidth} ${svgHeight}`}>\n\t\t\t\t<g key='main group'>\n\t\t\t\t{data.map((point, i) => {\n          return <circle key={i} style={{stroke:'#2196F3', fill:'#2196F3'}} cx={i/9.6 + 5.5} cy={(10 - point.level) * 3} r='.05'/> \n        })}\n\t\t\t\t<MajorAxis />\n\t\t\t\t<MinorAxis />\n\t\t\t\t<DataBox\n\t\t\t\t\tlastReading = {trendInfo.lastReading}\n\t\t\t\t\tsixHourDelta = {trendInfo.sixHourDelta}\n\t\t\t\t\ttwelveHourDelta = {trendInfo.twelveHourDelta}\n\t\t\t\t\ttwentyFourHourDelta = {trendInfo.twentyFourHourDelta}\n\t\t\t\t\tfortyEightHourDelta = {trendInfo.fortyEightHourDelta}/>\n\t\t\t\t</g>\n      </svg>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/LineChart/LineChart.js","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nimport {Spinner} from '../Spinner'\nimport TrendInfo from './TrendInfo'\n\nexport default class DataBox extends Component {\n\tstatic propTypes = {\n\n\t}\n\n\trender () {\n\t\tconst { lastReading, sixHourDelta, twelveHourDelta, twentyFourHourDelta, fortyEightHourDelta } = this.props\n    if (lastReading != undefined){\n      return([\n      <rect key='data box' x='6' y='0' width='27' height='10' style={{strokeWidth:'.2', stroke:'orange', fill:'white'}}/>,\n      <text key='date' x='7' y='2' style={{fill: 'black', fontSize:'1.5'}}> Last Observation: {lastReading.date.slice(0,16)} </text>,\n      <text key='value' x='7' y='4' style={{fill: 'black', fontSize:'1.5'}}> Last Observed Value: {lastReading.level}  ft</text>,\n      <TrendInfo \n        sixHourDelta = {sixHourDelta}\n        twelveHourDelta = {twelveHourDelta}\n        twentyFourHourDelta = {twentyFourHourDelta}\n        fortyEightHourDelta = {fortyEightHourDelta}/>\n      ])\n    } else {\n      return (\n        <Spinner />\n      )\n\t  }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// src/components/LineChart/DataBox.js","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Spinner } from '../Spinner'\n\nexport default class TrendInfo extends Component {\n\tstatic propTypes = {\n    \n\t}\n\n  static defaultProps = {\n    textStyle: {\n        fill: 'black',\n        fontSize:'1.5'\n      }\n  }\n\n  constructor (props) {\n    super (props)\n\n    this.arrowStyle = this.arrowStyle.bind(this)\n    this.renderPolyLine = this.renderPolyLine.bind(this)\n\n  }\n\n  arrowStyle(delta) {\n    return {\n      stroke: delta,\n      strokeWidth: '.2',\n      fill: 'none'\n    }\n  }\n\n  renderPolyLine(props) {\n    const { textStyle } = this.props\n    const arrows = []\n    for (var key in props) {\n      let points = ''\n      let x = ''\n      let y = ''\n      let x1 = ''\n      let x2 = ''\n      let y1 = ''\n      let y2 = ''\n      let text = ''\n      \n      switch(key) {\n        case 'sixHourDelta':\n          x = '7'\n          y = '6'\n          x1 = '12.5'\n          y1 = '7'\n          x2 = '12.5'\n          y2 = '9'\n          text = 'Trend:  6hr'\n          if (props[key] == 'green') {\n             points = '11.5,8 12.5,9 13.5,8'\n          } else if (props[key] == 'yellow') {\n             points = '0,0'\n          } else {\n             points = '11.5,8 12.5,7 13.5,8'\n          }\n        break\n        case 'twelveHourDelta':\n          x = '16'\n          y = '6'\n          x1 = '17.5'\n          y1 = '7'\n          x2 = '17.5'\n          y2 = '9'\n          text = '12hr'\n          if (props[key] == 'green') {\n             points = '16.5,8 17.5,9 18.5,8'\n          } else if (props[key] == 'yellow') {\n             points = '0,0'\n          } else {\n             points = '16.5,8 17.5,7 18.5,8'\n          }\n        break\n        case 'twentyFourHourDelta':\n          x = '22'\n          y = '6'\n          x1 = '23.5'\n          y1 = '7'\n          x2 = '23.5'\n          y2 = '9'\n          text = '24hr'\n          if (props[key] == 'green') {\n             points = '22.5,8 23.5,9 24.5,8'\n          } else if (props[key] == 'yellow') {\n             points = '0,0'\n          } else {\n             points = '22.5,8 23.5,7 24.5,8'\n          }\n        break\n        case 'fortyEightHourDelta':\n          x = '28'\n          y = '6'\n          x1 = '29.5'\n          y1 = '7'\n          x2 = '29.5'\n          y2 = '9'\n          text = '48hr'\n          if (props[key] == 'green') {\n             points = '28.5,8 29.5,9 30.5,8'\n          } else if (props[key] == 'yellow') {\n             points = '0,0'\n          } else {\n             points = '28.5,8 29.5,7 30.5,8'\n          }\n        break\n        default:\n          null\n      }\n        arrows.push([\n          <text key = {key + 'text'} x = {x} y = {y} style={textStyle}> {text} </text>,\n          <line key = {key + 'line'}x1 = {x1} y1 = {y1} x2 = {x2} y2 = {y2} style={this.arrowStyle(props[key])}/>,\n          <polyline key = {key + 'poly'} points={points} style={this.arrowStyle(props[key])}/>])\n    }\n    return arrows\n  }\n\n\trender () {\n\t\tconst { sixHourDelta, twelveHourDelta, twentyFourHourDelta, fortyEightHourDelta } = this.props\n\n    if (sixHourDelta != undefined) {\n      return(\n      <g key = 'arrow group'>{this.renderPolyLine(this.props)}</g>\n      )\n    } else {\n      return(\n        <Spinner />\n      )\n    }\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/LineChart/TrendInfo.js","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class MajorAxis extends Component {\n\tstatic propTypes = {\n\n\t}\n\n\tstatic defaultProps = {\n\t\tsvgHeight: 40,\n\t\tsvgWidth: 80\n\t}\n\n\tconstructor (props) {\n\t\tsuper (props)\n\n\t\tthis.state = {\n\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { svgHeight, svgWidth} = this.props\n\t\treturn (\n      [\t<text key='yLabel' x='-15.3' y='0'style={{fill: 'black', fontSize:'1.5', transform: 'rotate(-90deg)'}}> Level (ft) </text>,\n        <line key='majorX' x1='3' y1={svgHeight - 10} x2={svgWidth - 5} y2={svgHeight - 10} style={{stroke:'black',strokeWidth:'.3'}}/>,\n        <line key='majorY' x1='5' y1={svgHeight - 8} x2='5' y2='0' style={{stroke:'black',strokeWidth:'.3'}}/>\n      ]\n    )\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/components/LineChart/MajorAxis.js","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class MinorAxis extends Component {\n\tstatic propTypes = {\n\n\t}\n\n\tstatic defaultProps = {\n    svgHeight: 40,\n    svgWidth: 80,\n    textStyle: {fill: 'black', fontSize:'1.5'}\n\t}\n\n\tconstructor (props) {\n\t\tsuper (props)\n\n\t\tthis.state = {\n\n\t\t}\n\n\t\tthis.makeMinorXAxis = this.makeMinorXAxis.bind(this)\n\t\tthis.makeMinorYAxis = this.makeMinorYAxis.bind(this)\n\t}\n\n\tmakeMinorXAxis() {\n    const { svgWidth, textStyle } = this.props\n    const minorXAxis = []\n    for (var i = 0; i < 10; i++) {\n      if (i === 1 || i === 2) {\n        i === 1\n          ?  minorXAxis.push([<line key={'minorX' + i} x1='3' y1='3.12' x2={svgWidth - 5} y2='3.12' style={{stroke:'red', strokeWidth:'.2'}}/>,\n              <text key={'minorXText' + i} x='0' y='3.6' style={{fill: 'red', fontSize:'1.5'}}> 8.96 </text>])\n          :  minorXAxis.push([<line key={'minorX' + i} x1='3' y1={i * 3} x2={svgWidth -5 } y2={i * 3} style={{stroke:'orange', strokeWidth:'.1'}}/>,\n              <text key={'minorXText' + i}x='1' y={(i * 3) + .4} style={textStyle}> {(i * 3) + 2} </text>])  \n      } else {\n          minorXAxis.push([<line key={'minorX' + i} x1='3' y1={i * 3} x2={svgWidth - 5} y2={i * 3} style={{stroke:'black', strokeWidth:'.1'}}/>,\n            <text key={'minorXText' + i} x='1' y={(i * 3) + .4} style={textStyle}> {(30 - (i * 3))/3} </text>])\n      }\n    }\n    return minorXAxis\n  }\n\n  makeMinorYAxis(data) {\n    const { svgHeight, svgWidth, textStyle } = this.props\n    const minorYAxis = []\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n    const date = new Date()\n    const hour = date.getHours()\n    const hour2 = new Date(date.setHours(date.getHours() + 12)).getHours()\n    const minutes = date.getMinutes() === 0\n      ? '00'\n      : '00'\n\n    Date.prototype.addDays = (days) => {\n      return new Date(date.getTime() + days * 86400000)\n    }\n\n    for (var i = 1; i <= 14; i++) {\n      \n        const month = months[date.getMonth()]\n        \n        let day = ''\n        if (i === 10 || (i - 10) % 2 === 0) {\n          day = days[new Date().addDays((i - 10)/2).getDay()]\n        } else {\n          day = days[new Date().addDays((i - 11)/2).getDay()]\n        }\n        let index = ''\n        if (i === 10 || (i - 10) % 2 === 0) {\n          index = new Date().addDays((i - 10)/2).getDate()\n        } else {\n          index = new Date().addDays((i - 11)/2).getDate()\n        }\n        \n      if (i % 2 === 0){\n        minorYAxis.push([<line key={'minorY' + i} x1={i * 5 + 5} y1={svgHeight - 8} x2={i * 5 + 5} y2='0' style={{stroke:'grey',strokeWidth:'.1'}}/>,\n        <text key={'minorYText' + i} x={i * 5 + 3.1} y={svgHeight - 6} style={textStyle}>{hour < 12 ? '0' + hour : hour}:{minutes}</text>,\n        <text key={'minorYText' + i + 1} x={i * 5 + 3.5} y={svgHeight - 4} style={textStyle}>{day}</text>,\n        <text key={'minorYText' + i + 2} x={i * 5 + 3.1} y={svgHeight - 2} style={textStyle}>{month} {index}</text>])\n      } else {\n        minorYAxis.push([<line key={'minorY' + i} x1={i * 5 + 5} y1={svgHeight - 8} x2={i * 5 + 5} y2='0' style={{stroke:'grey',strokeDasharray:'1,.5',strokeWidth:'.1'}}/>,\n        <text key={'minorYText' + i} x={i * 5 + 3.2} y={svgHeight - 6} style={textStyle}>{hour2 < 12 ? '0' + hour2 : hour2}:{minutes}</text>,\n        <text key={'minorYText' + i + 1} x={i * 5 + 3.5} y={svgHeight - 4} style={textStyle}>{day}</text>,\n        <text key={'minorYText' + i + 2} x={i * 5 + 3.3} y={svgHeight - 2} style={textStyle}>{month} {index}</text>])\n      }\n    }\n    return minorYAxis\n  }\n\n  render () {\n  \treturn (\n      <g key = 'minor axis'>\n      {this.makeMinorYAxis()}\n      {this.makeMinorXAxis()}\n      </g>\n  \t)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// src/components/LineChart/MinorAxis.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"tivoliRiverInfo\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"getTivoliRiverInfo\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"trendInfo\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"lastReading\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"date\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"level\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"sixHourDelta\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"twelveHourDelta\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"twentyFourHourDelta\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"fortyEightHourDelta\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"level\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":208}};\n    doc.loc.source = {\"body\":\"query tivoliRiverInfo {\\n\\tgetTivoliRiverInfo {\\n\\t\\ttrendInfo {\\n\\t\\t\\tlastReading{\\n\\t\\t\\tdate\\n\\t\\t\\tlevel\\n\\t\\t}\\n\\t\\t\\tsixHourDelta\\n\\t\\t\\ttwelveHourDelta\\n\\t\\t\\ttwentyFourHourDelta\\n\\t\\t\\tfortyEightHourDelta\\n\\t\\t}\\n\\t\\tdata {\\n\\t\\t\\tlevel\\n\\t\\t}\\n\\t}\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"tivoliRiverInfo\"] = oneQuery(doc, \"tivoliRiverInfo\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/TivoliRiverInfo.graphql\n// module id = 52\n// module chunks = 0","import React from 'react';\nimport Status from './Status';\n\nconst NotFoundPage = () => (\n  <Status code={404}>\n    <h1>Sorry, the requested page could not be found.</h1>\n  </Status>\n);\n\nexport default NotFoundPage;\n\n\n\n// WEBPACK FOOTER //\n// src/routes/NotFoundPage.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n\nconst Status = ({ code, children }) => (\n  <Route\n    render={({ staticContext }) => {\n      if (staticContext) {\n        staticContext.status = code; // eslint-disable-line\n      }\n\n      return children;\n    }}\n  />\n);\n\nStatus.defaultProps = {\n  code: 200,\n};\n\nStatus.propTypes = {\n  code: PropTypes.number,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Status;\n\n\n\n// WEBPACK FOOTER //\n// src/routes/Status.js","module.exports = require(\"react-router-dom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router-dom\"\n// module id = 55\n// module chunks = 0","import React, { Component } from 'react'\n\nimport DateRangeField from '../CustomerInfoForm/DateRangeField'\nimport RateField from '../CustomerInfoForm/RateField'\n\nexport default class CheckAvailability extends Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tcabin: true,\n\t\t\trv: true,\n\t\t\tmonthly: false,\n\t\t\tmoreThanTen: false\n\t\t}\n\n\t\tthis.choice = this.choice.bind(this)\n\t}\n\n\tchoice(event) {\n\t\tif(event.target.name == 'rv') {\n\t\t\tthis.setState({cabin: !this.state.cabin})\n\t\t} else {\n\t\t\tthis.setState({rv: !this.state.rv})\n\t\t}\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t[<h3> Check Availability </h3>,\n\t\t\t<label> Cabin </label>,\n\t\t\t<div>{this.state.cabin \n\t\t\t\t? <input\n\t\t\t\t\ttype='checkbox'\n\t\t\t\t\tname='cabin'\n\t\t\t\t\tonClick={this.choice}\n\t\t\t\t\t/>\n\t\t\t\t: <input\n\t\t\t\t\ttype='checkbox'\n\t\t\t\t\tname='cabin'\n\t\t\t\t\tdisabled\n\t\t\t\t\t/>}</div>,\n\t\t\t<label> RV Space </label>,\n\t\t\t<div>{this.state.rv\n\t\t\t\t? <input\n\t\t\t\t\ttype='checkbox'\n\t\t\t\t\tname='rv'\n\t\t\t\t\tonClick={this.choice}\n\t\t\t\t\t/>\n\t\t\t\t: <input\n\t\t\t\t\ttype='checkbox'\n\t\t\t\t\tname='rv'\n\t\t\t\t\tdisabled\n\t\t\t\t\t/>}</div>,\n\t\t\t<RateField />,\n\t\t\t<DateRangeField />]\n\t\t)\n\t}\n} \n\n\n// WEBPACK FOOTER //\n// src/components/CheckAvailability/CheckAvailability.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7DA;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACEA;;;;;;;ACFA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnnnnnnHA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnHA;;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;;;A","sourceRoot":""}