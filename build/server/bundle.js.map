{"version":3,"file":"bundle.js","sources":["webpack:///webpack/bootstrap 2a6e1e42756e57d413c6","webpack:///external \"react\"","webpack:///external \"react-router\"","webpack:///external \"apollo-link\"","webpack:///external \"apollo-link-http\"","webpack:///external \"apollo-link-persisted-queries\"","webpack:///src/server.js","webpack:///external \"express\"","webpack:///external \"path\"","webpack:///external \"http-proxy-middleware\"","webpack:///external \"react-dom/server\"","webpack:///external \"apollo-client\"","webpack:///external \"react-apollo\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"node-fetch\"","webpack:///src/links.js","webpack:///external \"apollo-link-ws\"","webpack:///external \"apollo-link-error\"","webpack:///external \"apollo-utilities\"","webpack:///src/routes/Html.js","webpack:///src/routes/Layout.js","webpack:///src/routes/index.js","webpack:///src/routes/Main.js","webpack:///src/routes/NotFoundPage.js","webpack:///src/routes/Status.js","webpack:///external \"prop-types\"","webpack:///external \"react-router-dom\"","webpack:///./src/graphql/AllMovies.graphql"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2a6e1e42756e57d413c6","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"react-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"apollo-link\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"apollo-link-http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-http\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"apollo-link-persisted-queries\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-persisted-queries\"\n// module id = 4\n// module chunks = 0","import Express from 'express';\nimport path from 'path';\nimport proxy from 'http-proxy-middleware';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/server';\nimport { StaticRouter } from 'react-router';\n\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider, renderToStringWithData } from 'react-apollo';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'node-fetch';\nimport { createPersistedQueryLink } from 'apollo-link-persisted-queries';\n\nimport {\n  errorLink,\n  subscriptionLink,\n  requestLink,\n  queryOrMutationLink,\n} from './links';\nimport Html from './routes/Html';\nimport Layout from './routes/Layout';\n\nlet PORT = 3000;\nif (process.env.PORT) {\n  PORT = parseInt(process.env.PORT, 10);\n}\n// 'http://localhost:3010'\nconst API_HOST =\n  process.env.NODE_ENV !== 'production'\n    ? 'https://graphql-server-basic.herokuapp.com/'\n    : 'https://api.githunt.com';\n\nconst app = new Express();\n\nconst apiProxy = proxy({ target: API_HOST, changeOrigin: true });\napp.use('/graphql', apiProxy);\napp.use('/graphiql', apiProxy);\napp.use('/login', apiProxy);\napp.use('/logout', apiProxy);\n\nif (process.env.NODE_ENV === 'production') {\n  // In production we want to serve our JS from a file on the filesystem.\n  app.use('/static', Express.static(path.join(process.cwd(), 'build/client')));\n} else {\n  // Otherwise we want to proxy the webpack development server.\n  app.use(\n    '/static',\n    proxy({ target: 'http://localhost:3020', pathRewrite: { '^/static': '' } })\n  );\n}\nconst links = [\n  errorLink,\n  queryOrMutationLink({\n    fetch,\n    uri: `${API_HOST}/graphql`,\n  }),\n];\n// support APQ in production\nif (process.env.NODE_ENV === 'production') {\n  links.unshift(createPersistedQueryLink());\n}\napp.use((req, res) => {\n  const client = new ApolloClient({\n    ssrMode: true,\n    link: ApolloLink.from(links),\n    cache: new InMemoryCache(),\n  });\n\n  const context = {};\n\n  const component = (\n    <ApolloProvider client={client}>\n      <StaticRouter location={req.url} context={context}>\n        <Layout />\n      </StaticRouter>\n    </ApolloProvider>\n  );\n\n  renderToStringWithData(component)\n    .then(content => {\n      res.status(200);\n      const html = <Html content={content} client={client} />;\n      res.send(`<!doctype html>\\n${ReactDOM.renderToStaticMarkup(html)}`);\n      res.end();\n    })\n    .catch(e => {\n      console.error('RENDERING ERROR:', e); // eslint-disable-line no-console\n      res.status(500);\n      res.end(\n        `An error occurred. Please submit an issue to [https://github.com/apollographql/GitHunt-React] with the following stack trace:\\n\\n${\n          e.stack\n        }`\n      );\n    });\n});\n\napp.listen(PORT, () =>\n  console.log(\n    // eslint-disable-line no-console\n    `App Server is now running on http://localhost:${PORT}`\n  )\n);\n\n\n\n// WEBPACK FOOTER //\n// src/server.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"http-proxy-middleware\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http-proxy-middleware\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"react-dom/server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom/server\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"apollo-client\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-client\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"apollo-cache-inmemory\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-cache-inmemory\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"node-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"node-fetch\"\n// module id = 13\n// module chunks = 0","import { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { onError } from 'apollo-link-error';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { createPersistedQueryLink } from 'apollo-link-persisted-queries';\n\nexport const errorLink = onError(({ graphQLErrors, networkError }) => {\n  /*\n  onError receives a callback in the event a GraphQL or network error occurs.\n  This example is a bit contrived, but in the real world, you could connect\n  a logging service to the errorLink or perform a specific action in response\n  to an error.\n  */\n  if (graphQLErrors)\n    graphQLErrors.map(({ message, location, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${location}, Path: ${path}`\n      )\n    );\n  if (networkError) console.log(`[Network error]: ${networkError}`);\n});\n\nexport const subscriptionLink = (config = {}) =>\n  new WebSocketLink({\n    uri:\n      process.env.NODE_ENV !== 'production'\n        ? 'ws://localhost:3010/subscriptions'\n        : 'wss://api.githunt.com/subscriptions',\n    options: { reconnect: true },\n    ...config,\n  });\n\nexport const queryOrMutationLink = (config = {}) =>\n  // turn on CDN support via GET\n  createPersistedQueryLink({ useGETForHashedQueries: true }).concat(\n    new HttpLink({\n      ...config,\n      credentials: 'same-origin',\n    })\n  );\n\nexport const requestLink = ({ queryOrMutationLink, subscriptionLink }) =>\n  /*\n    This link checks if the operation is a subscription.\n    If it is, we use our subscription link to retrieve data over WebSockets.\n    If it is a query or mutation, we retrieve data over HTTP.\n  */\n  ApolloLink.split(\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    subscriptionLink,\n    queryOrMutationLink\n  );\n\n\n\n// WEBPACK FOOTER //\n// src/links.js","module.exports = require(\"apollo-link-ws\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-ws\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"apollo-link-error\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-error\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"apollo-utilities\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-utilities\"\n// module id = 17\n// module chunks = 0","/* eslint-disable react/no-danger */\n\nimport React from 'react';\n\nconst Html = ({ content, client: { cache } }) => (\n  <html lang=\"en\">\n    <head>\n      <meta charSet=\"utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\"\n        integrity=\"sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7\"\n        crossOrigin=\"anonymous\"\n      />\n      <title>Calhoun's Riverside RV Retreat</title>\n    </head>\n    <body>\n      <div id=\"content\" dangerouslySetInnerHTML={{ __html: content }} />\n      <div id=\"footer\">\n        <ul>\n          <li>\n            Fork on <a href=\"https://github.com/apollostack/GitHunt\">Github</a>\n          </li>\n          <li>\n            This is an <a href=\"http://www.apollostack.com/\">Apollo</a> example\n            app\n          </li>\n        </ul>\n      </div>\n      <script\n        charSet=\"UTF-8\"\n        dangerouslySetInnerHTML={{\n          __html: `window.__APOLLO_STATE__=${JSON.stringify(cache.extract())};`,\n        }}\n      />\n      <script src=\"/static/bundle.js\" charSet=\"UTF-8\" />\n    </body>\n  </html>\n);\n\nexport default Html;\n\n\n\n// WEBPACK FOOTER //\n// src/routes/Html.js","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport routes from './index';\n// import Navbar from '../components/Navbar';\n\n// const ReactGA = process.browser ? require('react-ga') : {};\n\n// if (process.browser) {\n//   // Initialize Analytics\n//   ReactGA.initialize('UA-74643563-4');\n// }\n\n// function logPageView() {\n//   if (process.browser) {\n//     ReactGA.set({ page: window.location.pathname });\n//     ReactGA.pageview(window.location.pathname);\n//   }\n\n//   return null;\n// }\n\nconst Layout = () => (\n  <div>\n    {/*<Route path=\"/\" component={logPageView} />\n    <Navbar />*/}\n    <div className=\"container\">\n      <Switch>\n        {routes.map(route => <Route key={`route-${route.name}`} {...route} />)}\n      </Switch>\n    </div>\n  </div>\n);\n\nexport default Layout;\n\n\n\n// WEBPACK FOOTER //\n// src/routes/Layout.js","import Main from './Main';\n// import NewEntryPage from './NewEntryPage';\n// import CommentsPage from './CommentsPage';\nimport NotFoundPage from './NotFoundPage';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    exact: true,\n    component: Main,\n  },\n  // {\n  //   path: '/feed/:type',\n  //   name: 'feed',\n  //   component: FeedPage,\n  // },\n  // {\n  //   path: '/submit',\n  //   name: 'submit',\n  //   component: NewEntryPage,\n  // },\n  // {\n  //   path: '/:org/:repoName',\n  //   name: 'submit',\n  //   component: CommentsPage,\n  // },\n  {\n    path: '*',\n    name: 'notfound',\n    component: NotFoundPage,\n  },\n];\n\nexport default routes;\n\n\n\n// WEBPACK FOOTER //\n// src/routes/index.js","import React from 'react'\nimport { Query } from 'react-apollo'\n\nimport ALL_MOVIES from '../graphql/AllMovies.graphql'\n\nexport default class Main extends React.Component{\n\tconstructor() {\n\t\tsuper()\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t<h1> This is Calhoun's </h1>\n\t\t\t<Query query={ALL_MOVIES}>\n\t        { ({loading, data}) => {\n\t            if (loading) {\n\t             return ( <h1> Loading </h1> )\n\t            } else {\n\t              return ( \n\t                <div>\n\t                  <h1> all movies </h1>\n\t                  {data.allMovies.map(title => {\n\t                    return (<p> {title.title} </p>)\n\t                  })}\n\t                </div>\n\t              )\n\t            }\n\t          } \n\t        }\n\t      </Query>\n\t      </div>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// src/routes/Main.js","import React from 'react';\nimport Status from './Status';\n\nconst NotFoundPage = () => (\n  <Status code={404}>\n    <h1>Sorry, the requested page could not be found.</h1>\n  </Status>\n);\n\nexport default NotFoundPage;\n\n\n\n// WEBPACK FOOTER //\n// src/routes/NotFoundPage.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n\nconst Status = ({ code, children }) => (\n  <Route\n    render={({ staticContext }) => {\n      if (staticContext) {\n        staticContext.status = code; // eslint-disable-line\n      }\n\n      return children;\n    }}\n  />\n);\n\nStatus.defaultProps = {\n  code: 200,\n};\n\nStatus.propTypes = {\n  code: PropTypes.number,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Status;\n\n\n\n// WEBPACK FOOTER //\n// src/routes/Status.js","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"react-router-dom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router-dom\"\n// module id = 26\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"allMovies\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"allMovies\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}]}}],\"loc\":{\"start\":0,\"end\":42}};\n    doc.loc.source = {\"body\":\"query allMovies {\\n\\tallMovies {\\n\\ttitle\\n\\t}\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"allMovies\"] = oneQuery(doc, \"allMovies\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/AllMovies.graphql\n// module id = 27\n// module chunks = 0"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7DA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACEA;;;;;;;ACFA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}